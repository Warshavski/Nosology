!function (a, b) { function g(a) { var b = a, c = b.getWrapper(), e = b.options; return c.appendChild(b.getHeader()), c.appendChild(b.getContainer()), c.appendChild(b.getFooter()), "" === e.title && b.hideHeader(), b.title(e.title), b.content(e.content), b.addButton("\u0417\u0410\u041a\u0420\u042b\u0422\u042c", "destory", function () { b.remove() }), e.modal && b.showModal(), e.autoHide && b.autoHide(e.autoHide), e.callBack && b.addButton("\u786e\u5b9a", "apply", e.callBack), c.addEventListener("click", i.bind(b), !1), c.addEventListener("touchstart", j, !1), c.addEventListener("touchend", j, !1), d.body.appendChild(c), b.verticalInViewPort(e.fixed).addClass("dialog-zoom-in"), b } function h(a, b) { var c = d.createElement(a); return f.extend(c, b), c } function i(a) { var b = a.target, c = b.getAttribute("data-dialog-action"); c && f.event.fire(c, b) } function j(a) { var b = a.target, c = b.getAttribute("data-dialog-action"); c && b.classList.toggle("active") } function k(a) { var b = a, c = h("div"); return c.style.cssText = ";background:rgba(0,0,0,0.3);width:100%;position:absolute;left:0;top:0;height:" + Math.max(d.documentElement.scrollHeight, d.body.scrollHeight) + "px;z-index:" + (b.currentDOMIndex - 1), c.onclick = function () { b.options.preventHide || f.event.fire("destory") }, d.body.appendChild(c) } function l(a) { return "[object Function]" === Object.prototype.toString.call(a) } function m(a) { return null === a || void 0 === a ? !1 : a.constructor == {}.constructor } var c = a, d = b, e = "1.0.0", f = function (a, b) { return new f.fn.init(a, b) }; f.fn = f.prototype = { constructor: f, init: function (a, b) { if (this.options = { title: " ", modal: !0, content: "messages", autoHide: 0, fixed: !0, preventHide: !1, callBack: null }, this.buttons = [], f.currentDialog && f.currentDialog.remove(), f.currentDialog = this, m(a)) f.extend(this.options, a); else { if (!/string|number|boolean/gi.test(typeof a)) return this; this.options.content = a, l(b) && (this.options.callBack = b) } return g(this) } }, f.extend = f.fn.extend = function () { var c, d, a = arguments[0] || {}, b = arguments[1] || {}; 1 === arguments.length && (a = this, b = arguments[0]); for (c in b) d = b[c], void 0 !== d && (a[c] = d); return a }, f.fn.init.prototype = f.fn, f.extend({ expando: "jDialog" + (e + Math.random()).replace(/\D/g, "") }), f.event = { actions: {}, add: function (a, b) { return l(b) && (this.actions[a] = b), this }, remove: function (a) { return this.has(a) ? delete this.actions[a] : (console.warn(a + "\u4e0d\u5b58\u5728"), !1) }, has: function (a) { return "string" === typeof a && this.actions[a] ? !0 : !1 }, once: function (a) { return this.has(a) && this.fire(a).remove(a), this }, fire: function (a, b) { return this.has(a) && this.actions[a].call(b || c), this } }, f.fn.extend({ verticalInViewPort: function (a) { var b = d.documentElement, c = b.clientHeight, e = this.height(); if (a) e > c && (e = .75 * c, this.getContainer().style.height = e - (this.height(this.getHeader()) + this.height(this.getFooter())) + "px"), this.height(e).toggleLockBody(!0).extend(this.getWrapper().style, { position: "fixed", marginTop: -e / 2 + "px", top: "50%" }); else { var f = Math.max(d.body.scrollTop, b.scrollTop), g = Math.max(382 * (c - e) / 1e3 + f, f); this.top(g).height("auto").toggleLockBody(!1).getContainer().style.height = "auto" } return this }, toggleLockBody: function (a) { var b = this.getHeader(), c = this.getFooter(), d = this.getModal(), e = "ontouchmove"; return b[e] = c[e] = d[e] = a ? function () { return !1 } : null, this }, getWrapper: function () { return this.wrapper || (this.wrapper = h("div", { className: "dialog" }), this.wrapper.style.zIndex = this.currentDOMIndex = 614), this.wrapper }, getHeader: function () { return this.header ? this.header : this.header = h("div", { className: "dialog-header" }) }, hideHeader: function () { var a = this.getHeader(), b = this.height(a); return this.height(this.height() - b), a.style.display = "none", this }, getContainer: function () { return this.container ? this.container : this.container = h("div", { className: "dialog-body" }) }, getFooter: function () { return this.footer ? this.footer : this.footer = h("div", { className: "dialog-footer" }) }, hideFooter: function () { var a = this.getFooter(), b = this.height(a); return this.height(this.height() - b), a.style.display = "none", this }, addButton: function (a, b, c) { var d = ("jDialog" + Math.random()).replace(/\D/g, ""), e = "\u786e\u5b9a"; if (l(a)) return this.addButton(e, b || d, a); if (l(b)) return this.addButton(a, d, b); var g = h("a", { href: "javascript:;", className: "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color-text--white mdl-color--nos-help dialog-btn", innerHTML: a || e }); b ? f.event.add(b, c) : b = "destory", g.setAttribute("data-dialog-action", b); var i = this.getFooter(); return this.buttons.length ? (this.addClass("dialog-btn-primary", g), i.insertBefore(g, i.childNodes.item(0))) : i.appendChild(g), this.buttons.push(g), this }, delButton: function (a) { var c, b = this.getButton(a); if (b) { c = b.getAttribute("data-dialog-action"), "destory" != c && f.event.remove(c), this.getFooter().removeChild(b); var d = this.buttons.indexOf(b); this.buttons.splice(d, 1) } return this }, getButton: function (a) { var b = this.buttons.slice().reverse(); return b[a] ? b[a] : null }, addClass: function (a, b) { return b = b || this.getWrapper(), 1 === b.nodeType && "string" === typeof a && b.classList.add(a), this }, removeClass: function (a, b) { return b = b || this.getWrapper(), 1 === b.nodeType && "string" === typeof a && b.classList.remove(a), this }, autoHide: function (a) { return f.currentDialog ? 0 == a ? this.remove() : void 0 === a ? this.autoHide(this.options.autoHide) : (this.autoHideTimer && clearTimeout(this.autoHideTimer), this.autoHideTimer = setTimeout(function () { this.remove(), clearTimeout(this.autoHideTimer), this.autoHideTimer = null }.bind(this), 1e3 * a), this) : this }, remove: function () { return this.toggleLockBody(!1), this.wrapper && (this.wrapper.removeEventListener("click", i, !1), this.wrapper.removeEventListener("touchstart", j, !1), this.wrapper.removeEventListener("touchend", j, !1), d.body.removeChild(this.wrapper)), this.modal && (this.modal.onclick = null, d.body.removeChild(this.modal)), this.autoHideTimer && clearTimeout(this.autoHideTimer), f.currentDialog = this.buttons = this.container = this.footer = this.header = this.options = this.wrapper = this.modal = null, this }, getModal: function () { return this.modal || (this.modal = k(this)), this.modal }, hideModal: function () { return this.getModal().style.display = "none", this }, showModal: function () { return this.getModal().style.display = "", this }, getCloseBtn: function () { return this.closeBtn || (this.closeBtn = h("span", { innerHTML: "Close", "data-dialog-action": "destory", className: "dialog-btn-dismiss" })), this.closeBtn } }); var n = function (a) { return /em|px|rem|pt|%|auto/gi.test(a) || (a += "px"), a }; f.fn.extend({ title: function (a) { return "undefined" === typeof a ? this.options.title : (this.getHeader().innerHTML = this.options.title = a, this) }, content: function (a) { if ("undefined" === typeof a) return this.options.content; var b = "<p>" + a + "</p>"; return this.getContainer().innerHTML = this.options.content = b, this }, height: function (a) { return "undefined" === typeof a ? this.height(this.getWrapper()) : 1 === a.nodeType ? a.offsetHeight : (this.wrapper.style.height = n(a), this) }, width: function (a) { return "undefined" === typeof a ? this.width(this.getWrapper()) : 1 === a.nodeType ? a.offsetWidth : (f.extend(this.wrapper.style, { width: n(a), marginLeft: n(-(parseFloat(a) / 2)) }), this) }, index: function (a) { return "undefined" === typeof a ? this.currentDOMIndex : (this.currentDOMIndex = a, this.wrapper.style.zIndex = this.currentDOMIndex, this.getModal().style.zIndex = this.currentDOMIndex - 1, this) }, top: function (a) { return "undefined" === typeof a ? c.getComputedStyle(this.getWrapper()).top : (f.extend(this.wrapper.style, { top: n(a), marginTop: "" }), this) }, fixed: function (a) { var b = !0; return a && "undefined" === typeof a || (b = !1, this.getWrapper().style.position = "absolute"), this.verticalInViewPort(b) }, preventHide: function () { return this.options.preventHide = !0, this } }), f.extend({ alert: function (a) { return f(a) }, toast: function (a, b) { var c = f(a).addClass("dialog-toast"), d = c.getContainer(), e = c.height(d); return c.getContainer().style.textAlign = "center", c.hideFooter().hideHeader().hideModal().height(e).autoHide(b || 3), c }, error: function (a, b) { return f(a, b).addClass("dialog-error") } }), "function" === typeof define && define.amd ? define("jdialog", [], function () { return f }) : c.jDialog = f }(window, window.document);